// const { reload } = require("browser-sync");

$.ajaxSetup({
    headers: {
        'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
    }
});
function pagination_data(e=[])
{
    if(!$(e).attr('action').length)
        return false;
    // console.log($(e).serialize());
    $.ajax({
        data: $(e).serialize(),
        method: 'get',
        url:$(e).attr('action'),
        success:function(data)
        {           
            var datatable = $($(".my_datatable").closest(e).prevObject[0]).remove();
            // datatable.each(function(){
            //     $(this).remove();
            // });
            $(data).insertAfter(e);
            feather.replace();
            $(document).find('[data-bs-toggle="tooltip"]').tooltip();
        }
    });
}

function reloadDataTable(e)
{
    var  form = $(e).closest('.my_datatable').prev('form');    
    // form = $(form).length>0?form:$('form.datatable_paginate')[0] ;
    if($(form).length>0)
        pagination_data(form);
    else
    {
        $('.datatable_paginate').each(function() {
            pagination_data($(this));
        });
    }    
}

let sleep = ms => {  
return new Promise(resolve => setTimeout(resolve, ms));  
}; 

$(document).on("click", "[class*='openmodal-']", function(e) {
    var className = this.className;
     // Extract the part of the class name that starts with "openmodal-"
     var match = className.match(/openmodal-\S+/);    
     // Check if a match is found
     if (!match) 
        return false;
    var modalId = match[0].replace('openmodal-','').toString();   
    var url= $(this).attr('recordof');

    $.ajax({
        url: Base_url+"helper/getRecord/" + url,
        method: "post",
        success: function(json)
        {
            console.log(json);
            if (json.Status == 200)
            {
                var modal = $('#' + modalId );
                console.log(modal);
                if(modal.hasClass('modal'))
                    modal.modal('show');
                
                setModalVlues(json.Data ,modal);
            }
        }

    });
 
    // Rest of your click event handling logic goes here
  });

  //--------------------------------------------------------------------------------------------------
function setModalVlues(modalData ,modal)
{
    for (var key in modalData)
    {
        // var tagname = $('#' + key).prop("tagName");
        tagname = ($("[id='" + key + "']",modal).prop("tagName") != undefined) ? $("[id='" + key + "']",modal).prop("tagName") : $("[name='" + key + "']",modal).prop("tagName");
        if (tagname == 'INPUT')
        {
            type = $("[name='" + key + "']",modal).attr("type");
            if(type == 'radio')
            {
               $('input[name="' + key + '"][value="' + modalData[key] + '"]',modal).click();
            }
            else if(type == 'file')
            {
                if ($('#' + key,modal).hasClass('custom_fields_dropify')) 
                {
                    var file_key = key;
                    var file_path = modalData[key];                        
                }
            }
            else if(type == 'checkbox')
            {
                if (Array.isArray(modalData[key]))
                {
                    for (let i of modalData[key]) 
                    {
                         if (jQuery.inArray(i, modalData[key]) != -1)
                            $('input[name="' + key + '"][value="' + i + '"]',modal).prop('checked',true);
                        else
                            $('input[name="' + key + '"][value="' + i + '"]',modal).prop('checked',false);
                            
                        $('input[name="' + key + '"][value="' + i + '"]',modal).change();

                        if (jQuery.inArray(this.value, modalData[key]) != -1)
                            $('input[name="' + key + '[]"][value="' + i + '"]',modal).prop('checked',true);
                        else
                            $('input[name="' + key + '[]"][value="' + i + '"]',modal).prop('checked',false);
                            
                        $('input[name="' + key + '[]"][value="' + i + '"]',modal).change();

                    }                   
                }
                else
                {                                
                    $('input[name="' + key + '"][value="' + modalData[key] + '"]',modal).prop('checked',true);
                    $('input[name="' + key + '"][value="' + modalData[key] + '"]',modal).change();
                }
                // $('input[name="' + key + '"][value="' + modalData[key] + '"]').prop('checked',true);
            }
            else
                $('#' + key,modal).val(modalData[key]);
        }
        else if(tagname == 'IMG')
        {
            $('#' + key,modal).attr('src',modalData[key]);
        }
        else if(tagname == 'TEXTAREA')
        {
            if($('#' + key,modal).hasClass('summernote')) //when textarea with summernote
                $('#' + key,modal).summernote("code", modalData[key]);
            else
                $('#' + key,modal).val(modalData[key]);
        }
        else if(tagname == 'SELECT')
        {

            if(modalData[key]=='' || modalData[key]==0)
            {
                $("#"+key+" :nth-child(0)",modal).prop('selected', true);
                $("#"+key,modal).attr('selected-value','');
            }
            else
            {
                $("#"+key,modal).val(modalData[key]);
                $("#"+key,modal).attr('selected-value',modalData[key]);
            }

            //  $("#"+key).val(modalData[key]);

            $("#"+key,modal).trigger('change');

            
        }
        else if (tagname == 'I')
            $('#' + key,modal).css('background',modalData[key]);
        else if(tagname == 'IFRAME')
        {
            $('#' + key,modal).attr('src',modalData[key]);
        }
        else if(tagname == 'A')
        {
            $('#' + key,modal).attr('href',modalData[key]);
            $("#" + key,modal).removeClass ('d-none');    
        }
    }
}
//--------------------------------------------------------------------------------------------------

$(document).ready(function() {
    $('.datatable_paginate').bind('change keyup reset', 'input, select, textarea', function(event){
        var form = $(this).closest("form");
        $('[name=page]', form).val(1);
        pagination_data(form);

        if(event.type === 'reset') 
            sleep(100).then(() => {  pagination_data(form);});  
            
    });
    
    $('.datatable_paginate').each(function() {
        pagination_data($(this));
    });
    $(document).on('click', '.pagination a', function(event){
        event.preventDefault(); 
        var link = $(this).attr('href').split('?page=');
        var form = $('form[action="'+link[0]+'"]');

        // $('[name=page]',form).val(link[1]);
        // Check if the element exists
        var pageInput = $('[name=page]', form);
        if (pageInput.length === 0) {
            // Element not found, create it and set its value
            pageInput = $('<input>').attr({
                type: 'hidden',
                name: 'page',
                value: link[1]
            }).appendTo(form);
        } 
        pageInput.val(link[1]);
        pagination_data(form);     
    });

});


// Code to change status
$(document).on("change",".change_status",function(e){

    var checked = $(this).is(':checked');
    var status_element = this;
    const  notupdatedstatus = () => {
        toastr.info(`ðŸ‘‹ Status Not Updated Still ${checked ? 'InActive' : 'Active'}!`,
        checked ? 'Still InActive!' : 'Still Active!',
        { closeButton: true, tapToDismiss: false });
    }        

    if(!confirm('Are you sure you want to '+(checked?'Activate':'InActivate')+' It?'))
    {       
        $(this).prop('checked', !checked);
        notupdatedstatus();
        return false;
    }
    
    var url = $(this).attr('statusto');
    $.ajax({
        url : Base_url+"helper/change-stautus/"+url,
        type : "post",
        data : {},
        success : function(data){
            if(data.Status==200)
            {
                var datatable_switch = $(status_element).parent('.datatable-switch');

                $(status_element).attr('title', 'Click to '+(checked?'Deactivate':'Activate'));
                datatable_switch.attr('title', 'Click to '+(checked?'Deactivate':'Activate'));
                $('[role="tooltip"] .tooltip-inner').html($(datatable_switch).attr('title'));

                toastr['success']('ðŸ‘‹ Status Successfully '+(checked?'Activated':'InActivated')+'!', (checked?'Activated!':'InActivated!'), {
                    closeButton: true,
                    tapToDismiss: false
                  });
                $('[data-bs-toggle="tooltip"]').tooltip(); 
            }
            else{
                $(status_element).prop('checked', !checked);
                notupdatedstatus();
            }
            
        },
        error: function () {   
            $(status_element).prop('checked', !checked);
            notupdatedstatus();
        }
        
    });
});

// Code to delete record
$(document).on("click",".delete_record",function(e){

    var delete_element = this;
    const  notDeleted = () => {
        toastr.info(`ðŸ‘‹ Record Not Deleted!`,
         'Not Deleted',
        { closeButton: true, tapToDismiss: false });
    }        

    Swal.fire({
        title: 'Are you sure?',
        text: "You want to Delete It!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, Delete it!',
        customClass: {
          confirmButton: 'btn btn-primary',
          cancelButton: 'btn btn-outline-danger ms-1'
        },
        buttonsStyling: false
      }).then(function (result) {
            if (result.value) {    
                    var url = $(delete_element).attr('deleteto');
                    $.ajax({
                        url : Base_url+"helper/delete-record/"+url,
                        type : "post",
                        data : {},
                        success : function(data){
                            if(data.Status==200)
                            {
                                toastr['success']('ðŸ‘‹ Record Deleted Successfully !', 'Deleted', {
                                    closeButton: true,
                                    tapToDismiss: false
                                });

                                if($(delete_element).attr('reload-page')=='1')
                                    window.location.reload();
                                
                                reloadDataTable(delete_element);
                            }
                            else
                                notDeleted();            
                        },
                        error: function () {   
                            notDeleted();
                        }        
                    });
                }
                else
                    notDeleted(); 
        });
});

// Code to change status
$(document).on("click",".itsrst-pass",function(e){

    var rstpass_element = this;
    const  notresetpass = () => {
        toastr.info(`ðŸ‘‹ Password Not Reseted Still!`, 'Still Old Password!',
        { closeButton: true, tapToDismiss: false });
    }
    Swal.fire({
        title: 'Are you sure?',
        text: "You want to Reset Password!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, Reset it!',
        customClass: {
          confirmButton: 'btn btn-primary',
          cancelButton: 'btn btn-outline-danger ms-1'
        },
        buttonsStyling: false
      }).then(function (result) {
            if (result.value) {
                var url = $(rstpass_element).attr('rstpassto');
                $.ajax({
                    url : Base_url+url,
                    type : "post",
                    data : {},
                    success : function(data){
                        if(data.Status==200)
                        {
                            toastr['success']('ðŸ‘‹ Password Reseted Successfully!', 'Password Reseted!', {
                                closeButton: true,
                                tapToDismiss: false
                            });
                        }
                        else
                            notresetpass();
                        
                    },
                    error: function () {   
                        notresetpass();
                    }
                    
                });
            }
            else
                notresetpass();
        });
        
    // if(!confirm('Are you sure you want to Reset Password?'))
    // {       
    //     notupdatedstatus();
    //     return false;
    // }
    
    
});

// Code to change status
$(document).on("click",".itclrlogin",function(e){

    var rstpass_element = this;
    const  notclearedAttempts = () => {
        toastr.info(`ðŸ‘‹ Not Cleared!`, 'Not Cleared!',
        { closeButton: true, tapToDismiss: false });
    }
    Swal.fire({
        title: 'Are you sure?',
        text: "You want to clear login Attempts of user!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, Reset it!',
        customClass: {
          confirmButton: 'btn btn-primary',
          cancelButton: 'btn btn-outline-danger ms-1'
        },
        buttonsStyling: false
      }).then(function (result) {
            if (result.value) {
                var url = $(rstpass_element).attr('clrloginto');
                $.ajax({
                    url : Base_url+url,
                    type : "post",
                    data : {},
                    success : function(data){
                        if(data.Status==200)
                        {
                            toastr['success']('ðŸ‘‹Successfully cleared login Attempts!', 'Cleared Login Attempts!', {
                                closeButton: true,
                                tapToDismiss: false
                            });
                        }
                        else
                            notclearedAttempts();
                        
                    },
                    error: function () {   
                        notclearedAttempts();
                    }
                    
                });
            }
            else
                notclearedAttempts();
        });
       
});

// Code to get Markets Scripts

$(document).on('change', '.markettoscript', function () {
    var markettag = this;
    var market_id = $(this).val();
    var market_name = $('option:selected',this).text().trim();
    var scriptofmarket = $(this).attr('script_to');
    var url= $(this).attr('recordof');
    $.ajax({
        type: 'GET',
        url: Base_url+"helper/get-market-to-script/",
        data: { market_id: market_id },
        success: function (data) {
            console.log("AJAX Response Data:", data);

            // Clear and populate the "Script" dropdown with fetched data
            var scriptDropdown = scriptofmarket;
            // $(scriptDropdown).remove(); // Clear the dropdown options

            // if (market_name === 'GLOBAL FUTURES' || market_name === 'BINARY') {
                var html = '';
                $.each(data, function (key, value) {
                    html += '<option value="' + value.id + '">' + value.script_name + '</option>';
                });
                $(scriptofmarket).append(html);
        // }
        },
        error: function (xhr, status, error) {
            console.error('Error:', error);
        }
    });
});





